type User {
  _id: ID
  username: String!
  email: String!
  password: String!
  avatar: String
  joinDate: String
  favorites: [Post]
}

type Post {
  _id: ID
  title: String!
  imageUrl: String!
  categories: [String]!
  description: String!
  createdDate: String
  likes: [ID]
  createdBy: User!
  messages: [Message]
}

type Token {
  token: String!
}

type PostsPage {
  posts: [Post]
  hasMore: Boolean
}

type Message {
  _id: ID
  messageBody: String!
  messageDate: String
  messageUser: User!
}

type LikeSchema {
  postId: ID!
  userIds: [ID]!
}

type Mutation {
  signupUser(username: String!, email: String!, password: String!): Token
  signinUser(username: String!, password: String!): Token
  addPost(title: String!, imageUrl: String!, categories:[String]!, description: String!, creatorId: ID!): Post!
  addPostMessage(postId: ID!, messageUserId: ID!, messageBody: String!):Message
  likePost(postId: ID!, userId: ID!):LikeSchema
  unlikePost(postId: ID!, userId: ID!):LikeSchema
}

type Query {
  getCurrentUser: User,
  getPosts(limit: Int ): [Post],
  getPostById (postId: ID!):Post,
  infiniteScrollPosts(pageNum: Int!, pageSize: Int!):PostsPage
}
